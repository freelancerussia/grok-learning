1. –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞: TodoList (React + TypeScript)
–≠—Ç–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å React, —Ö—É–∫–∏, TypeScript –∏ SCSS. –¢—ã —É–∂–µ –ø–∏—Å–∞–ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ProductCard, —Ç–∞–∫ —á—Ç–æ TodoList –±—É–¥–µ—Ç –ª–æ–≥–∏—á–Ω—ã–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º.

–ó–∞–¥–∞—á–∞:

–ù–∞–ø–∏—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç TodoList (React + TypeScript), –∫–æ—Ç–æ—Ä—ã–π:
–•—Ä–∞–Ω–∏—Ç –∑–∞–¥–∞—á–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ (useState) —Å —Ç–∏–ø–æ–º { id: number; text: string; completed: boolean }.
–ò–º–µ–µ—Ç <input> –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞—á–∏ –∏ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å".
–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á (–∫–∞–∂–¥–∞—è —Å —Ç–µ–∫—Å—Ç–æ–º, —á–µ–∫–±–æ–∫—Å–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π "–£–¥–∞–ª–∏—Ç—å").
–ß–µ–∫–±–æ–∫—Å –º–µ–Ω—è–µ—Ç completed —É –∑–∞–¥–∞—á–∏.
–ò—Å–ø–æ–ª—å–∑—É–π SCSS-–º–æ–¥—É–ª–∏ –¥–ª—è —Å—Ç–∏–ª–µ–π (–∞–¥–∞–ø—Ç–∏–≤–Ω–æ: –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —Å–ø–∏—Å–æ–∫ –∑–∞–Ω–∏–º–∞–µ—Ç 100% —à–∏—Ä–∏–Ω—ã, –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ ‚Äî –º–∞–∫—Å–∏–º—É–º 600px).
–¢–∏–ø–∏–∑–∏—Ä—É–π –≤—Å—ë —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.
–ë–æ–Ω—É—Å: –¥–æ–±–∞–≤—å —Ñ–∏–ª—å—Ç—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–æ–ø–∫–∏ "–í—Å–µ", "–ê–∫—Ç–∏–≤–Ω—ã–µ", "–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ").
–ü–æ—á–µ–º—É —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ:

–ó–∞–∫—Ä–µ–ø–∏—à—å useState –∏ —Ä–∞–±–æ—Ç—É —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
–ü–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ—à—å —Ç–∏–ø–∏–∑–∞—Ü–∏—é –ø—Ä–æ–ø—Å–æ–≤ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
–£–ª—É—á—à–∏—à—å –Ω–∞–≤—ã–∫–∏ –≤–µ—Ä—Å—Ç–∫–∏ –∏ —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏.
–ü–æ–¥–≥–æ—Ç–æ–≤–∏—à—å—Å—è –∫ —Ç–∏–ø–∏—á–Ω—ã–º –∑–∞–¥–∞—á–∞–º –Ω–∞ —Å–æ–±–µ—Å–∞—Ö (todo-–ª–∏—Å—Ç—ã —á–∞—Å—Ç–æ –ø—Ä–æ—Å—è—Ç –Ω–∞–ø–∏—Å–∞—Ç—å).
–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏: ~2-3 —á–∞—Å–∞ –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∏ —Å—Ç–∏–ª–∏.

2. –ó–∞–¥–∞—á–∞ –ø–æ JavaScript: Debounce
–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –Ω–∞—á–Ω–µ–º –ø–æ–¥—Ç—è–≥–∏–≤–∞—Ç—å JavaScript –¥–ª—è —Å–æ–±–µ—Å–æ–≤. Debounce ‚Äî —á–∞—Å—Ç–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å —Ç–∞–π–º–µ—Ä—ã –∏ –∑–∞–º—ã–∫–∞–Ω–∏—è.

–ó–∞–¥–∞—á–∞:

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é debounce(fn, delay), –∫–æ—Ç–æ—Ä–∞—è:
–ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é fn –∏ –∑–∞–¥–µ—Ä–∂–∫—É delay (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö).
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç fn –Ω–µ —á–∞—â–µ, —á–µ–º —Ä–∞–∑ –≤ delay –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥.
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
js

const log = () => console.log('Hello');
const debouncedLog = debounce(log, 1000);
debouncedLog(); // –í—ã–∑–æ–≤–µ—Ç—Å—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
debouncedLog(); // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è, –µ—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ —Ä–∞–Ω—å—à–µ 1 —Å–µ–∫—É–Ω–¥—ã
–ü–æ—á–µ–º—É —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ:

–ó–∞–∫—Ä–µ–ø–∏—à—å –∑–∞–º—ã–∫–∞–Ω–∏—è –∏ —Ä–∞–±–æ—Ç—É —Å setTimeout.
–ü–æ–¥–≥–æ—Ç–æ–≤–∏—à—å—Å—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º –Ω–∞ —Å–æ–±–µ—Å–∞—Ö –≤—Ä–æ–¥–µ "–ö–∞–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å—Ç—ã–µ —Å–æ–±—ã—Ç–∏—è?".
–≠—Ç–æ –±–∞–∑–æ–≤–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –æ–±—ä—è—Å–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä—É.
–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏: ~1 —á–∞—Å –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.

3. –¢–µ–æ—Ä–∏—è (–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ)
–ß—Ç–æ–±—ã –∑–∞–∫—Ä–µ–ø–∏—Ç—å –∑–Ω–∞–Ω–∏—è "–Ω–∞–∏–∑—É—Å—Ç—å", —è –±—É–¥—É –¥–∞–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–æ—Ä–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:

–ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ –∏ –∫–∞–∫ –æ–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç? (–û–±—ä—è—Å–Ω–∏ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ.)
–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç useEffect –≤ React? –ö–æ–≥–¥–∞ –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è?
–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–∂–µ–Ω–µ—Ä–∏–∫–∏ –≤ TypeScript? –ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä.
–¢—ã –º–æ–∂–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å –ø–∏—Å—å–º–µ–Ω–Ω–æ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥—É–º–∞—Ç—å –Ω–∞–¥ –Ω–∏–º–∏. –Ø –ø—Ä–æ–≤–µ—Ä—é –∏ –æ–±—ä—è—Å–Ω—é, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫.

–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏: ~30 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –Ω–∞ —á—Ç–µ–Ω–∏–µ/—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ.

–ö–∞–∫ –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ
–°–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞:
–ù–∞—á–Ω–∏ —Å TodoList. –ù–∞–ø–∏—à–∏ –∫–æ–¥, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ (VS Code, CodeSandbox) –∏ –∑–∞–ø–æ—Å—Ç–∏ —Å—é–¥–∞. –Ø –ø—Ä–æ–≤–µ—Ä—é, –¥–∞–º —Ñ–∏–¥–±–µ–∫ –∏ —É–∫–∞–∂—É, —á—Ç–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å.
–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å debounce. –ï—Å–ª–∏ –∑–∞—Å—Ç—Ä—è–Ω–µ—à—å, —è –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å.
–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å: "–ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ?" (–ø–∏—Å—å–º–µ–Ω–Ω–æ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—É–º–∞–π).
–ß–µ—Ä–µ–∑ 2-3 –¥–Ω—è:
–†–∞–∑–±–µ—Ä–µ–º —Ç–≤–æ–π –∫–æ–¥ TodoList –∏ debounce.
–î–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –ø–æ React (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫) –∏ JavaScript (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª–∏—Ñ–∏–ª Array.map).
–ü—Ä–æ–π–¥–µ–º —Ç–µ–æ—Ä–∏—é –ø–æ useEffect –∏–ª–∏ TypeScript.
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Ñ–æ–∫—É—Å –Ω–∞ —á–µ–º-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º:
–ù–∞–ø—Ä–∏–º–µ—Ä, —É–≥–ª—É–±–∏—Ç—å—Å—è –≤ —Ö—É–∫–∏ (useMemo, useCallback), TypeScript (–¥–∂–µ–Ω–µ—Ä–∏–∫–∏) –∏–ª–∏ SCSS (–∞–Ω–∏–º–∞—Ü–∏–∏). –°–∫–∞–∂–∏, –∏ —è –¥–∞–º –∑–∞–¥–∞—á—É –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ.
–û—Ç–≤–µ—Ç –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å: —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏–ª–∏ –ø–æ –ø–ª–∞–Ω—É?
–¢—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ —ç—Ç–∞–ø–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, debounce –∏–ª–∏ –ø–æ–ª–∏—Ñ–∏–ª) —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –Ω–æ —è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å:

–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ: –ü–∏—à–∏ –∫–æ–¥ –¥–ª—è TodoList –∏ debounce. –≠—Ç–æ —Ç–≤–æ–π –≤–∫–ª–∞–¥ –≤ –ø—Ä–æ–∫–∞—á–∫—É.
–° –º–æ–µ–π –ø–æ–º–æ—â—å—é: –Ø –ø—Ä–æ–≤–µ—Ä—è—é, –æ–±—ä—è—Å–Ω—è—é –æ—à–∏–±–∫–∏, –¥–∞—é –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É. –¢–∞–∫ —Ç—ã –±—ã—Å—Ç—Ä–µ–µ –∑–∞–∫—Ä–µ–ø–∏—à—å –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –Ω–µ –∑–∞—Å—Ç—Ä—è–Ω–µ—à—å.
–ï—Å–ª–∏ –±—É–¥–µ—à—å —Ä–µ—à–∞—Ç—å —á—Ç–æ-—Ç–æ —Å–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª–∏—Ñ–∏–ª Array.map), –∑–∞–ø–æ—Å—Ç–∏ –∫–æ–¥, –∏ —è –¥–∞–º —Ñ–∏–¥–±–µ–∫. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –≤–µ–ª —Ç–µ–±—è –ø–æ –∑–∞–¥–∞—á–∞–º, –Ω–∞—á–Ω–µ–º —Å TodoList –∏ debounce, –∞ –¥–∞–ª—å—à–µ –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ.

–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
–ü–æ–¥—Ç–≤–µ—Ä–¥–∏, —á—Ç–æ –Ω–∞—á–∏–Ω–∞–µ–º —Å TodoList –∏ debounce. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –¥—Ä—É–≥—É—é –∑–∞–¥–∞—á—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–ª—É—á—à–∏—Ç—å ProductCard –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫), —Å–∫–∞–∂–∏.
–ù–∞–ø–∏—à–∏ –∫–æ–¥ –¥–ª—è TodoList (React + TypeScript + SCSS). –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ, –Ω–æ –µ—Å–ª–∏ –ø–∏—à–µ—à—å —Å—Ä–∞–∑—É —Å—é–¥–∞, —Ç–æ–∂–µ –æ–∫–µ–π.
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é debounce. –ï—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω, –Ω–∞—á–Ω–∏, –∞ —è –ø–æ–¥—Å–∫–∞–∂—É.
–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å: –ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ? (–ú–æ–∂–Ω–æ –∫—Ä–∞—Ç–∫–æ, —è –ø—Ä–æ–≤–µ—Ä—é –∏ –æ–±—ä—è—Å–Ω—é.)
–£–∫–∞–∂–∏, –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—Ö–æ—á—É –±–æ–ª—å—à–µ TypeScript" –∏–ª–∏ "—Ñ–æ–∫—É—Å –Ω–∞ —Å–æ–±–µ—Å—ã").
–° —Ç–≤–æ–∏–º–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —á–∞—Å–∞–º–∏ –≤ –¥–µ–Ω—å –º—ã –±—ã—Å—Ç—Ä–æ –¥–æ–π–¥–µ–º –¥–æ —É—Ä–æ–≤–Ω—è, –≥–¥–µ —Ç—ã –±—É–¥–µ—à—å –∫–æ–¥–∏—Ç—å –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–µ –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Å–æ–±–µ—Å—ã —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏! üòé –ü–æ–≥–Ω–∞–ª–∏?

// -----------------------–û–¢–í–ï–¢--------------------------

1. TodoList.tsx
import {type ChangeEvent, type FC, memo, useCallback, useEffect, useState} from "react";
import s from './TodoList.module.scss'

interface ITask {
    id: number;
    text: string;
    completed: boolean
}

type  IFilterValue = 'all' | 'active' | 'completed'

export const TodoList: FC = memo(() => {
    const [tasks, setTasks] = useState<ITask[]>([
        {id: 1, text: '–í—ã—É—á–∏—Ç—å HTML', completed: true},
        {id: 2, text: '–í—ã—É—á–∏—Ç—å JS', completed: false},
        {id: 3, text: '–í—ã—É—á–∏—Ç—å css', completed: true},
    ])
    const [newTaskText, setNewTaskText] = useState<string>('')
    const [filter, setFilter] = useState<IFilterValue>('all')
    const [filteredTasks, setFilteredTasks] = useState<ITask[]>(tasks)

    const toggleTaskCompleted = useCallback((id: number) => {
        setTasks(prev => {
            return prev.map(task => task.id === id ? {...task, completed: !task.completed} : task)
        })
    }, [setTasks])

    const addTask = useCallback(() => {
        if (!newTaskText) {
            alert('–≤–≤–µ–¥–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–µ–ª–∏ –±—ã —Å–¥–µ–ª–∞—Ç—å!')
            return
        }

        setTasks([...tasks, {id: tasks.length + 1, text: newTaskText, completed: false}])
    }, [newTaskText, setTasks])

    const handleSelectFilter = useCallback((e: ChangeEvent<HTMLSelectElement>) => {
        const filterValue = e.target.value ? e.target.value : ''
        setFilter(filterValue as IFilterValue)
    }, [])

    useEffect(() => {
        setFilteredTasks(prev => {
            switch (filter) {
                case 'all':
                    return tasks;
                case 'completed':
                    return tasks.filter(t => t.completed);
                case 'active':
                    return tasks.filter(t => !t.completed);
                default:
                    return tasks;
            }
        })
    }, [filter]);

        return <div className={s.container}>
            <div className={s.taskAddWrapper}>
                <input
                    className={s.input}
                    type="text"
                    placeholder="–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"
                    onChange={(e) => setNewTaskText(e.target.value)}
                    value={newTaskText}
                />
                <button className={s.button} onClick={addTask}>–î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
            <select onChange={handleSelectFilter} value={filter}>
                <option value="all">–í—Å–µ</option>
                <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                <option value="compleated">–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ</option>
            </select>
            <div>
                {filteredTasks.map(t => {
                    return <div className={s.task} key={t.id}>
                        <input className={s.checkbox} type="checkbox" checked={t.completed}
                               onChange={() => toggleTaskCompleted(t.id)}/>
                        <span className={s.text}>{t.text}</span>
                    </div>
                })}
            </div>
        </div>
    })

TodoList.module.scss
.container{
  display: flex;
  flex-direction: column;
  width: 600px;
  background-color: #a2a2a2;
  padding: 20px;
  border-radius: 10px;

  @media screen and (max-width: 756px){
    width: 100%;
  }
}

.taskAddWrapper {
  margin-bottom: 10px;
  display: flex;
  gap: 5px;
  @media screen and (max-width: 756px){
    flex-direction: column;
  }
}

.task {
  display: flex;
  align-items: center;
  gap: 5px;
}

.checkbox {
  width: 20px;
  height: 20px;
}

.text {
  font-size: 19px;
}

–≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
input, button {
    padding: 5px 10px;
    border: none;
    border-radius: 5px;
}

2. —á–µ—Å—Ç–Ω–æ –≥–æ–≤–æ—Ä—è –ø –ædebounce –ø—Ä–æ–±–ª–µ–º–∫–∏ –µ—Å—Ç—å, —Å–∞–º–æ–º—É –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ –¥–µ–ª–∞—Ç—å, –Ω–∞—á–∞–ª –≤—Ä–æ–¥–µ –≤ —Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏, –ø–æ—Ç–æ–º –Ω–∞—á–∞–ª —á–∏—Ç–∞—Ç—å, –≤—Ä–æ–¥–µ –ø–æ–Ω—è–ª –Ω–æ –Ω–µ —Å–æ–≤—Å–µ–º, –ø–æ–∂—Ç–æ–º—É –Ω—É–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å –∏ —Ç–µ–æ—Ä–∏—é –∏ –ø—Ä–∞–∫—Ç–∏–∫—É –∑–¥–µ—Å—å

—Ç–µ–æ—Ä–∏—è
–∑–∞–º—ã–∫–∞–Ω–∏—è —ç—Ç–æ –∫–æ–≥–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –µ–µ –Ω–∞–ø—Ä–∏–º–µ—Ä –∫–∞–∫ –∫–æ–ª–±—ç–∫
–Ω–∞–ø—Ä–∏–º–µ—Ä
    const foo = () => {
        let a = 4
        return function () {
            console.log(a*10)
        }
    }
    const boo = foo()
    boo() //–≤—ã–≤–µ–¥–µ—Ç 40 –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è a=4 –±—ã–ª–∞ –∑–∞–º–∫–Ω—É—Ç–∞ –≤ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏

useEffect –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–±—ç–∫ –∏ –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π –∫–æ–ª–±—ç–∫ –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (–º–µ—Ç–æ–¥ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ componentDidMount)
–µ—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å —Ç–æ –∫–æ–ª–±—ç–∫ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ (–º–µ—Ç–æ–¥ componentDidUpdate)
–∏ –µ—Å–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∞–Ω–æ–Ω–∏–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–≥–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è (componentDidUnmount)
—Ä–∞–±–æ—Ç–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É—è –æ–±—â–∏–π –ø–æ—Ç–æ–∫

–¥–∂–µ–Ω–µ—Ä–∏–∫–∏ –≤ ts –Ω—É–∂–Ω—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —Ç–∏–ø–æ–≤
–Ω–∞–ø—Ä–∏–º–µ—Ä –µ—Å—Ç—å Omit<IButton, 'onClick'>       –±—É–¥–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è —Ç–∏–ø–∞ IButton –±–µ–∑ –ø–æ–ª—è onClick
–≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ IButton —è–≤–ª—è–µ—Ç—Å—è –¥–∂–∏–Ω–µ—Ä–∏–∫–æ–º
–≤–æ—Ç –≤—Ä–æ–¥–µ –≤—Å–µ —á—Ç–æ —Å–º–æ–≥, –ø—Ä–æ–≤–µ—Ä—è–π

// -------------------------- –ò–ò----------------------------

–û—à–∏–±–∫–∏ –∏ –Ω–µ–¥–æ—á–µ—Ç—ã:
TypeScript:
–í useEffect –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å [filter] –Ω–µ–ø–æ–ª–Ω–∞—è. –¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å tasks, –Ω–æ –Ω–µ —É–∫–∞–∑–∞–ª –µ–≥–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö. –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –±–∞–≥–∞–º, –µ—Å–ª–∏ tasks –æ–±–Ω–æ–≤–∏—Ç—Å—è, –∞ filteredTasks –Ω–µ—Ç. –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å tasks –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: [filter, tasks].
–í addTask —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å tasks –Ω–∞–ø—Ä—è–º—É—é –≤ setTasks([...tasks, ...]). –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å prev (–∫–∞–∫ –≤ toggleTaskCompleted), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è.
React:
–í useEffect —Ç—ã –æ–±–Ω–æ–≤–ª—è–µ—à—å filteredTasks —á–µ—Ä–µ–∑ setFilteredTasks, –Ω–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç tasks. –≠—Ç–æ –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ filteredTasks –º–æ–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ tasks –∏ filter –±–µ–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –≠—Ç–æ —É–ª—É—á—à–∏—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —É–º–µ–Ω—å—à–∏—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±–∞–≥–æ–≤.
useCallback –¥–ª—è toggleTaskCompleted –∏ addTask —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏—à–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, setTasks ‚Äî —ç—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –µ—ë –Ω–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –í addTask –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ [newTaskText].
alert –≤ addTask ‚Äî –Ω–µ –ª—É—á—à–∏–π UX. –õ—É—á—à–µ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ UI (–Ω–∞–ø—Ä–∏–º–µ—Ä, <p> —Å –æ—à–∏–±–∫–æ–π).
–í <select> –µ—Å—Ç—å –æ–ø–µ—á–∞—Ç–∫–∞: <option value="compleated"> (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å completed).
–õ–æ–≥–∏–∫–∞:
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è id —á–µ—Ä–µ–∑ tasks.length + 1 –Ω–µ–Ω–∞–¥–µ–∂–Ω–∞. –ï—Å–ª–∏ —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É, id –º–æ–∂–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è. –õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Date.now() –∏–ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –≤—Ä–æ–¥–µ uuid.
–ù–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á (—Ö–æ—Ç—è —Ç—ã –º–æ–≥ –Ω–µ –¥–µ–ª–∞—Ç—å –±–æ–Ω—É—Å, –Ω–æ —ç—Ç–æ —á–∞—Å—Ç–∞—è —Ñ–∏—á–∞ –≤ todo-–ª–∏—Å—Ç–∞—Ö).
SCSS:
–°—Ç–∏–ª–∏ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã, –Ω–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å UX. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–π —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–∂–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –∏ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è completed).
–¶–≤–µ—Ç —Ñ–æ–Ω–∞ #a2a2a2 (—Å–µ—Ä—ã–π) –≤—ã–≥–ª—è–¥–∏—Ç —É–Ω—ã–ª–æ. –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –ø—Ä–∏—è—Ç–Ω—ã–π —Ü–≤–µ—Ç –∏–ª–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç.
–ù–µ—Ç hover-—ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —á–µ–∫–±–æ–∫—Å–∞, —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:
filteredTasks –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–±—ã—Ç–æ—á–Ω–æ. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useMemo –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
memo –¥–ª—è TodoList –Ω–µ –Ω—É–∂–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–ø—Å—ã –∏ —Ä–µ–¥–∫–æ —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è.
–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å (a11y):
–£ <input> –Ω–µ—Ç aria-label –∏–ª–∏ id –¥–ª—è —Å–≤—è–∑–∏ —Å <label>.
<select> –∏ —á–µ–∫–±–æ–∫—Å—ã –Ω–µ –∏–º–µ—é—Ç aria-label –¥–ª—è —Å–∫—Ä–∏–Ω—Ä–∏–¥–µ—Ä–æ–≤.
<span> –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞—á–∏ –ª—É—á—à–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ <p> –∏–ª–∏ <label> –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏–∫–∏.

2. –†–∞–∑–±–æ—Ä debounce
–¢—ã —Å–∫–∞–∑–∞–ª, —á—Ç–æ —Å debounce –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –∏ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚Äî —ç—Ç–æ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—è –∑–∞–º—ã–∫–∞–Ω–∏–π –∏ —Ç–∞–π–º–µ—Ä–æ–≤. –î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º —Ç–µ–æ—Ä–∏—é –∏ –Ω–∞–ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é.

–¢–µ–æ—Ä–∏—è debounce
Debounce ‚Äî —ç—Ç–æ —Ç–µ—Ö–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —á–∞—Å—Ç–æ—Ç—É –≤—ã–∑–æ–≤–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏. –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –≤–≤–æ–¥–µ –≤ input), debounce –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –æ–Ω–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã (delay) —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞.

–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:

–°–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è-–æ–±–µ—Ä—Ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç setTimeout –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞.
–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –≤—ã–∑–æ–≤ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π.
–ó–∞–º—ã–∫–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–∞–π–º–µ—Ä –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏.
function debounce(fn, delay) {
  let timer;

  return function (...args) {
    clearTimeout(timer); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
    timer = setTimeout(() => {
      fn(...args); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
    }, delay);
  };
}
3. –†–∞–∑–±–æ—Ä —Ç–µ–æ—Ä–∏–∏
–ó–∞–º—ã–∫–∞–Ω–∏—è
–£—Ç–æ—á–Ω–µ–Ω–∏–µ:
–ó–∞–º—ã–∫–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –µ—ë –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏).
–í —Ç–≤–æ–µ–º –ø—Ä–∏–º–µ—Ä–µ a —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –∑–∞–º—ã–∫–∞–Ω–∏—é, –¥–∞–∂–µ –∫–æ–≥–¥–∞ foo –∑–∞–≤–µ—Ä—à–∏–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.
–î–ª—è —Å–æ–±–µ—Å–æ–≤ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä —Å —Ä–µ–∞–ª—å–Ω—ã–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä:
js

function createCounter() {
  let count = 0;
  return function () {
    return ++count;
  };
}
const counter = createCounter();
console.log(counter()); // 1
console.log(counter()); // 2
–í–æ–ø—Ä–æ—Å –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è: –ö–∞–∫ –∑–∞–º—ã–∫–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö —Å–æ–±—ã—Ç–∏–π? (–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–≤–µ—Ç–∏—Ç—å.)

useEffect
–£—Ç–æ—á–Ω–µ–Ω–∏—è:

–ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ([]) –≤—ã–∑—ã–≤–∞–µ—Ç useEffect —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–µ–Ω componentDidMount. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è, useEffect –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å–Ω–æ–≤–∞, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç componentDidMount.
–í–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è (cleanup) –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –Ω–æ –∏ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –≤—ã–∑–æ–≤–æ–º useEffect (–µ—Å–ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å).
–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å useEffect –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞, –≤ —Ñ–∞–∑–µ "commit" (browser painting).
–í–æ–ø—Ä–æ—Å –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è: –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç, –µ—Å–ª–∏ –∑–∞–±—ã—Ç—å —É–∫–∞–∑–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ useEffect? –ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä –±–∞–≥–∞.

–î–∂–µ–Ω–µ—Ä–∏–∫–∏
–û—Ü–µ–Ω–∫–∞: –ß–∞—Å—Ç–∏—á–Ω–æ –≤–µ—Ä–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø—É—Ç–∞–Ω–∏—Ü–∞. Omit ‚Äî —ç—Ç–æ —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π —Ç–∏–ø, –∞ –Ω–µ –¥–∂–µ–Ω–µ—Ä–∏–∫. –î–∂–µ–Ω–µ—Ä–∏–∫–∏ ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤/—Ñ—É–Ω–∫—Ü–∏–π —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Ç–∏–ø–∞.

–£—Ç–æ—á–Ω–µ–Ω–∏–µ:

–î–∂–µ–Ω–µ—Ä–∏–∫ ‚Äî —ç—Ç–æ "—à–∞–±–ª–æ–Ω" —Ç–∏–ø–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏. –ü—Ä–∏–º–µ—Ä:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
function identity<T>(value: T): T {
  return value;
}
console.log(identity<string>('hello')); // T = string
console.log(identity<number>(42)); // T = number
Omit<IButton, 'onClick'> ‚Äî —ç—Ç–æ —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª—è–µ—Ç –ø–æ–ª–µ onClick –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ IButton. –ó–¥–µ—Å—å IButton ‚Äî –Ω–µ –¥–∂–µ–Ω–µ—Ä–∏–∫, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
–ü—Ä–∏–º–µ—Ä –¥–∂–µ–Ω–µ—Ä–∏–∫–∞ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
interface Box<T> {
  content: T;
}
const stringBox: Box<string> = { content: 'hello' };
const numberBox: Box<number> = { content: 42 };
–í–æ–ø—Ä–æ—Å –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è: –ù–∞–ø–∏—à–∏ –¥–∂–µ–Ω–µ—Ä–∏–∫-—Ñ—É–Ω–∫—Ü–∏—é getFirst<T>, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —Ç–∏–ø–∞ T[].



//------------------------------------–û–¢–í–ï–¢------------------------------------

–í–æ–ø—Ä–æ—Å –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è: –ö–∞–∫ –∑–∞–º—ã–∫–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö —Å–æ–±—ã—Ç–∏–π? (–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–≤–µ—Ç–∏—Ç—å.)
–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö —Å–æ–±—ã—Ç–∏–π –∑–∞–º—ã–∫–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º
—Ç–∞–∫ –∫–∞–∫ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–ª–±—ç–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –æ–Ω–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –º–æ–º–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –∏ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –º—ã –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –∑–∞–º—ã–∫–∞—é—Ç—Å—è –≤ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏. –Ω—É –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –º—ã —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞–µ–º –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∞–±–∞–æ—Ç—ã–≤–∞–µ—Ç
–í–æ–ø—Ä–æ—Å –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è: –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç, –µ—Å–ª–∏ –∑–∞–±—ã—Ç—å —É–∫–∞–∑–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ useEffect? –ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä –±–∞–≥–∞.
–µ—Å–ª–∏ –∑–∞–±—ã—Ç—å —É–∫–∞–∑–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ –±—É–¥–µ—Ç —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∞ –∫–æ–≥–¥–∞ –æ–Ω –Ω–∞–º –Ω—É–∂–µ–Ω
–Ω–∞–ø—Ä–∏–º–µ—Ä –¥–∞–∂–µ –µ—Å–ª–∏ –≤ –∑–∞–¥–∞—á–µ TodoList –Ω–µ —É–∫–∞–∑–∞—Ç—å filter –≤  –º–∞—Å—Å–∏–≤ —Ç–æ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –Ω–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è (–µ—Å–ª–∏ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ useEffect)
–í–æ–ø—Ä–æ—Å –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è: –ù–∞–ø–∏—à–∏ –¥–∂–µ–Ω–µ—Ä–∏–∫-—Ñ—É–Ω–∫—Ü–∏—é getFirst<T>, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —Ç–∏–ø–∞ T[].
function getFirst<T>(arr: T[]): T {
    return arr[0];
}
    console.log(getFirst(['asd']));
    console.log(getFirst([123]));

–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥ TodoList.tsx
import {type ChangeEvent, type FC, memo, useCallback, useMemo, useState} from "react";
import s from './TodoList.module.scss'

interface ITask {
    id: number;
    text: string;
    completed: boolean
}

type  IFilterValue = 'all' | 'active' | 'completed'

export const TodoList: FC = memo(() => {
    const [tasks, setTasks] = useState<ITask[]>([
        {id: 1, text: '–í—ã—É—á–∏—Ç—å HTML', completed: true},
        {id: 2, text: '–í—ã—É—á–∏—Ç—å JS', completed: false},
        {id: 3, text: '–í—ã—É—á–∏—Ç—å css', completed: true},
    ])
    const [newTaskText, setNewTaskText] = useState<string>('')
    const [filter, setFilter] = useState<IFilterValue>('all')
    const [error, setError] = useState<string | null>(null);

    const addTask = useCallback(() => {
        if (!newTaskText.trim()) {
            setError('–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É!');
            return;
        }
        setError(null);
        setTasks((prev) => [
            ...prev,
            {id: Date.now(), text: newTaskText.trim(), completed: false},
        ]);
        setNewTaskText('');
    }, [newTaskText]);

    const toggleTaskCompleted = useCallback((id: number) => {
        setTasks(prev => {
            return prev.map(task => task.id === id ? {...task, completed: !task.completed} : task)
        })
    }, [])

    const deleteTask = useCallback((id: number) => {
        setTasks(prev=> prev.filter(task=>task.id !== id))
    }, []);

    const handleSelectFilter = useCallback((e: ChangeEvent<HTMLSelectElement>) => {
        setFilter(e.target.value as IFilterValue);
    }, []);

    const filteredTasks = useMemo(() => {
        switch (filter) {
            case 'all':
                return tasks;
            case 'completed':
                return tasks.filter((t) => t.completed);
            case 'active':
                return tasks.filter((t) => !t.completed);
            default:
                return tasks;
        }
    }, [filter, tasks]);

    return <div className={s.container}>
        <div className={s.taskAddWrapper}>
            <label htmlFor="task-input" className={s.label}>
                –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
            </label>
            <input
                id="task-input"
                className={s.input}
                type="text"
                placeholder="–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"
                value={newTaskText}
                onChange={(e) => setNewTaskText(e.target.value)}
                aria-invalid={!!error}
            />
            <button className={s.button} onClick={addTask}>
                –î–æ–±–∞–≤–∏—Ç—å
            </button>
            {error && <p className={s.error}>{error}</p>}
        </div>
        <select
            className={s.filter}
            onChange={handleSelectFilter}
            value={filter}
            aria-label="–§–∏–ª—å—Ç—Ä –∑–∞–¥–∞—á"
        >
            <option value="all">–í—Å–µ</option>
            <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
            <option value="completed">–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ</option>
        </select>
        <ul className={s.taskList}>
            {filteredTasks.map((task) => (
                <li key={task.id} className={s.task}>
                    <input
                        type="checkbox"
                        checked={task.completed}
                        onChange={() => toggleTaskCompleted(task.id)}
                        className={s.checkbox}
                        id={`task-${task.id}`}
                    />
                    <label
                        htmlFor={`task-${task.id}`}
                        className={`${s.text} ${task.completed ? s.completed : ''}`}
                    >
                        {task.text}
                    </label>
                    <button
                        className={s.deleteButton}
                        onClick={() => deleteTask(task.id)}
                        aria-label={`–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É ${task.text}`}
                    >
                        ‚úï
                    </button>
                </li>
            ))}
        </ul>
    </div>
})

debounce –Ω–∞–ø–∏—Å–∞–ª –≤—Ä–æ–¥–µ
const debounce = (fn:any, delay:number) => {
    let timer
    return function(...args: any[]){
        clearTimeout(timer)
        return setTimeout(()=>fn(...args),delay);
    }
}
—Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π –≤–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∑–¥–µ—Å—å

–Ω–∞ —Ç–µ–æ—Ä–∏—é –æ—Ç–≤–µ—Ç–∏–ª –≤—ã—à–µ

–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ useFetch
–≤ –æ–±—â–µ–º –ø–∏—Å–∞–ª —è —Å–∞–º –ø–æ—ç—Ç–æ–º—É –≤—ã—à–ª–æ –≤–æ—Ç —á—Ç–æ
import {useState} from "react";


export   function useFetch<T>(url: string):{data: T | null, error: string | null, loading:boolean} {
    const [loading, setLoading] = useState<boolean>(false)
    const [error, setError] = useState<null | string>(null)
    const [data, setData] = useState<T | null>(null)
    setLoading(true)

     fetch(url)
        .then(res => res.json())
        .then(setData)
        .catch(setError)
        .finally(() => setLoading(false))

    return {
        data, loading, error
    }
}
–Ω–æ —è –Ω–µ –∑–Ω–∞—é —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —ç—Ç–æ –∏ –≤–µ—Ä–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ + —è –Ω–µ –ø–æ–Ω–∏–º–∞—é –∫–∞–∫ —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ (–≤—ã–∑—ã–≤–∞—Ç—å –≤ useEffect –∏–ª–∏ –Ω–µ—Ç), –Ω—É–∂–µ–Ω –ª–∏ async/await –∏ —Ç–¥
–ø–æ—Å–º–æ—Ç—Ä–∏ —ç—Ç–æ –∞ –ø–æ—Ç–æ–º –ø—Ä–æ–¥–æ–ª–∂—É —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏ –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–ª–∏—Ñ–∏–ª–∞
–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–µ –ø–æ–Ω—è–ª —á—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–¥–µ—Å—å
–î–µ–Ω—å 5-6: –ü–æ—Å—Ç—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ –∏–∑ API —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏).
–î–µ–Ω—å 7: –†–∞–∑–±–µ—Ä–∏ 2-3 –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —Å–æ–±–µ—Å–æ–≤ (—è –¥–∞–º —Å–ø–∏—Å–æ–∫).
–∂–¥—É —Ñ–∏–¥–±—ç–∫


----------------------------------------–ò–ò--------------------------------------------


–ù–µ–¥–æ—á–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
React:
memo –≤—Å—ë –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ö–æ—Ç—è –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –±–µ–∑ –ø—Ä–æ–ø—Å–æ–≤ –æ–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ. memo –ø–æ–ª–µ–∑–Ω–æ, –∫–æ–≥–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–∞—Å—Ç–æ —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–ø—Å–æ–≤ –≤ —Ä–æ–¥–∏—Ç–µ–ª–µ. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å.
–í addTask —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å setTasks((prev) => [...prev, ...]), —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–æ setNewTaskText('') –∏–¥–µ—Ç –ø–æ—Å–ª–µ setTasks. –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ª—É—á—à–µ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –æ–¥–∏–Ω –±–ª–æ–∫ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
setTasks((prev) => [...prev, { id: Date.now(), text: newTaskText.trim(), completed: false }]);
setNewTaskText('');
setError(null);
SCSS:
–°—Ç–∏–ª–∏ —Ö–æ—Ä–æ—à–∏–µ, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:
Hover-—ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å" –∏ "–£–¥–∞–ª–∏—Ç—å".
–†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞—Å—Ç–æ–º–Ω—ã–π –≤–∏–¥ —á–µ—Ä–µ–∑ appearance: none).
–ê–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, opacity –∏–ª–∏ transform).
–¶–≤–µ—Ç —Ñ–æ–Ω–∞ #f5f5f5 (–∏–∑ –º–æ–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞) –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–æ–ª–µ–µ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –≥—Ä–∞–¥–∏–µ–Ω—Ç.
–õ–æ–≥–∏–∫–∞:
Date.now() –¥–ª—è id ‚Äî –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ. –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å uuid (–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ uuid –∏–ª–∏ crypto.randomUUID()).
–ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á (–Ω–∞–ø—Ä–∏–º–µ—Ä, <p>–ù–µ—Ç –∑–∞–¥–∞—á</p>).
–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:
–£ —á–µ–∫–±–æ–∫—Å–æ–≤ –µ—Å—Ç—å id –∏ htmlFor, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å aria-checked={task.completed} –¥–ª—è —Å–∫—Ä–∏–Ω—Ä–∏–¥–µ—Ä–æ–≤.
<ul> –¥–ª—è –∑–∞–¥–∞—á ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å role="list" –¥–ª—è —è–≤–Ω–æ–π —Å–µ–º–∞–Ω—Ç–∏–∫–∏.
–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:
–î–æ–±–∞–≤—å –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞: filteredTasks.length === 0 && <p>–ù–µ—Ç –∑–∞–¥–∞—á</p>.
–ü–æ–ø—Ä–æ–±—É–π –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–µ–∫–±–æ–∫—Å—ã —á–µ—Ä–µ–∑ SCSS (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—Ä—É–≥–ª—ã–π —á–µ–∫–±–æ–∫—Å —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π).
–£–±–µ—Ä–∏ memo –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π, –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
–û—Ü–µ–Ω–∫–∞: 9/10. –ö–æ–¥ –ø–æ—á—Ç–∏ –∏–¥–µ–∞–ª–µ–Ω, –æ—Å—Ç–∞–ª–æ—Å—å —á—É—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∏–ª–∏ –∏ –º–µ–ª–∫–∏–µ –¥–µ—Ç–∞–ª–∏.

2. –†–∞–∑–±–æ—Ä debounce
–¢–≤–æ–π –∫–æ–¥ –¥–ª—è debounce:

ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
const debounce = (fn: any, delay: number) => {
    let timer
    return function(...args: any[]){
        clearTimeout(timer)
        return setTimeout(()=>fn(...args),delay);
    }
}
–ß—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
–õ–æ–≥–∏–∫–∞ –≤–µ—Ä–Ω–∞—è: —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –∑–∞–º—ã–∫–∞–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è timer, —Å–±—Ä–∞—Å—ã–≤–∞–µ—à—å —Ç–∞–π–º–µ—Ä —á–µ—Ä–µ–∑ clearTimeout –∏ –≤—ã–∑—ã–≤–∞–µ—à—å fn —á–µ—Ä–µ–∑ setTimeout —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π delay.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ...args –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ fn.
–û—à–∏–±–∫–∏ –∏ –Ω–µ–¥–æ—á–µ—Ç—ã:
–¢–∏–ø–∏–∑–∞—Ü–∏—è:
fn: any –∏ args: any[] ‚Äî —ç—Ç–æ —Å–ª–∞–±–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è. –í TypeScript –ª—É—á—à–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã, —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, fn –º–æ–∂–µ—Ç –±—ã—Ç—å —Ñ—É–Ω–∫—Ü–∏–µ–π —Å –ª—é–±—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º, –∞ timer ‚Äî —ç—Ç–æ NodeJS.Timeout –∏–ª–∏ number.
–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
function debounce<T extends (...args: any[]) => void>(fn: T, delay: number) {
  let timer: NodeJS.Timeout | undefined;
  return function (...args: Parameters<T>) {
    clearTimeout(timer);
    timer = setTimeout(() => fn(...args), delay);
  };
}
–ó–¥–µ—Å—å T ‚Äî –¥–∂–µ–Ω–µ—Ä–∏–∫ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏, Parameters<T> –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–∏–ø—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
–í–æ–∑–≤—Ä–∞—Ç setTimeout:
–¢—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—à—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç setTimeout –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ (return setTimeout(...)). –≠—Ç–æ –æ—à–∏–±–∫–∞, —Ç–∞–∫ –∫–∞–∫ setTimeout –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Ç–∞–π–º–µ—Ä–∞ (NodeJS.Timeout), –∞ –Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç fn. –ù—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–≤–∞—Ç—å setTimeout –±–µ–∑ return.
–ü—Ä–∞–≤–∏–ª—å–Ω–æ:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
setTimeout(() => fn(...args), delay);
–ù–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π timer:
–¢—ã –æ–±—ä—è–≤–ª—è–µ—à—å let timer –±–µ–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è. TypeScript –º–æ–∂–µ—Ç —Ä—É–≥–∞—Ç—å—Å—è, —á—Ç–æ timer –º–æ–∂–µ—Ç –±—ã—Ç—å undefined. –õ—É—á—à–µ —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å let timer: NodeJS.Timeout | undefined.
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
function debounce<T extends (...args: any[]) => void>(fn: T, delay: number) {
  let timer: NodeJS.Timeout | undefined;

  return function (...args: Parameters<T>) {
    clearTimeout(timer);
    timer = setTimeout(() => fn(...args), delay);
  };
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const log = (text: string) => console.log(text);
const debouncedLog = debounce(log, 1000);
debouncedLog('Test'); // –í—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
debouncedLog('Test2'); // –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤—ã–∑–æ–≤

–î–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏:
–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π debounce —Å input-—Å–æ–±—ã—Ç–∏–µ–º:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
const input = document.querySelector('input');
const debouncedInput = debounce((e: Event) => console.log((e.target as HTMLInputElement).value), 500);
input?.addEventListener('input', debouncedInput);
–î–æ–±–∞–≤—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–º–µ–Ω—ã debounce (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–µ—Ç–æ–¥ cancel):
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
function debounce<T extends (...args: any[]) => void>(fn: T, delay: number) {
  let timer: NodeJS.Timeout | undefined;
  const debounced = function (...args: Parameters<T>) {
    clearTimeout(timer);
    timer = setTimeout(() => fn(...args), delay);
  };
  debounced.cancel = () => clearTimeout(timer);
  return debounced;
}
–û—Ü–µ–Ω–∫–∞: 7/10. –õ–æ–≥–∏–∫–∞ –≤–µ—Ä–Ω–∞—è, –Ω–æ —Ç–∏–ø–∏–∑–∞—Ü–∏—è –∏ return setTimeout ‚Äî –æ—à–∏–±–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ –º–æ–µ–º—É –ø—Ä–∏–º–µ—Ä—É –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å.

3. –†–∞–∑–±–æ—Ä useFetch
–¢–≤–æ–π –∫–æ–¥ –¥–ª—è useFetch:

ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import { useState } from "react";

export function useFetch<T>(url: string): { data: T | null, error: string | null, loading: boolean } {
    const [loading, setLoading] = useState<boolean>(false)
    const [error, setError] = useState<null | string>(null)
    const [data, setData] = useState<T | null>(null)
    setLoading(true)

    fetch(url)
        .then(res => res.json())
        .then(setData)
        .catch(setError)
        .finally(() => setLoading(false))

    return {
        data, loading, error
    }
}
–ß—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
–¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –¥–∂–µ–Ω–µ—Ä–∏–∫ T –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ { data, loading, error } —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–¥–∞–Ω–∏—é.
–ò—Å–ø–æ–ª—å–∑—É–µ—à—å fetch –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å —Å–æ—Å—Ç–æ—è–Ω–∏—è.
–û—à–∏–±–∫–∏ –∏ –ø—Ä–æ–±–ª–µ–º—ã:
–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è fetch:
–¢—ã –≤—ã–∑—ã–≤–∞–µ—à—å fetch –ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ —Ö—É–∫–∞, –∞ –Ω–µ –≤ useEffect. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —á—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º –∑–∞–ø—Ä–æ—Å–∞–º –∏ –±–∞–≥–∞–º. –ù—É–∂–Ω–æ –æ–±–µ—Ä–Ω—É—Ç—å fetch –≤ useEffect.
–ü—Ä–∏–º–µ—Ä –±–∞–≥–∞: –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è), fetch –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –ø–æ–ª—É—á–µ–Ω—ã.
–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:
–í .catch(setError) —Ç—ã –ø–µ—Ä–µ–¥–∞–µ—à—å –æ—à–∏–±–∫—É –Ω–∞–ø—Ä—è–º—É—é, –Ω–æ setError –æ–∂–∏–¥–∞–µ—Ç string | null. –û—à–∏–±–∫–∞ –∏–∑ fetch ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç Error, –∏ –µ–≥–æ –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, err.message).
–¢—ã –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—à—å —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ (res.ok). –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª 404 –∏–ª–∏ 500, res.json() –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –Ω–æ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏.
–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ setLoading(true):
setLoading(true) –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, —á—Ç–æ –º–æ–∂–µ—Ç —Å–±–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –õ—É—á—à–µ —É–ø—Ä–∞–≤–ª—è—Ç—å loading –≤–Ω—É—Ç—Ä–∏ useEffect.
–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ URL:
–ï—Å–ª–∏ url –∏–∑–º–µ–Ω–∏—Ç—Å—è, —Ö—É–∫ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, —Ç–∞–∫ –∫–∞–∫ useEffect –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å url –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.
Async/await:
–¢—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å .then/.catch, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ async/await –º–æ–∂–µ—Ç –±—ã—Ç—å —á–∏—Ç–∞–±–µ–ª—å–Ω–µ–µ. –≠—Ç–æ –≤–æ–ø—Ä–æ—Å –≤–∫—É—Å–∞, –Ω–æ —è –ø–æ–∫–∞–∂—É –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ:
–¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–º–µ—Ç–∏–ª, —á—Ç–æ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö—É–∫. –•—É–∫ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ, –∏ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ JSX. –û–±—ã—á–Ω–æ useEffect –≤–Ω—É—Ç—Ä–∏ —Ö—É–∫–∞ —Å–∞–º —É–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–º, –∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ—Å—Ç–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç { data, loading, error }.
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
import { useState, useEffect } from 'react';

export function useFetch<T>(url: string): { data: T | null; error: string | null; loading: boolean } {
  const [data, setData] = useState<T | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [loading, setLoading] = useState<boolean>(false);

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      try {
        const res = await fetch(url);
        if (!res.ok) {
          throw new Error(`HTTP error! Status: ${res.status}`);
        }
        const result = await res.json();
        setData(result);
      } catch (err) {
        setError(err instanceof Error ? err.message : 'Unknown error');
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, [url]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç url

  return { data, loading, error };
}

–î–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏:
–î–æ–±–∞–≤—å –æ–ø—Ü–∏—é options –≤ —Ö—É–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, { method: 'POST', headers: {} }).
–†–µ–∞–ª–∏–∑—É–π –æ—Ç–º–µ–Ω—É –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–æ–º–æ—â—å—é AbortController:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
const controller = new AbortController();
fetch(url, { signal: controller.signal });
return () => controller.abort(); // –û—á–∏—Å—Ç–∫–∞ –≤ useEffect
–û—Ü–µ–Ω–∫–∞: 6/10. –ò–¥–µ—è –≤–µ—Ä–Ω–∞—è, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ useEffect –∏ —Å–ª–∞–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ‚Äî –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É.

–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
TodoList:
–î–æ–±–∞–≤—å –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ (<p>–ù–µ—Ç –∑–∞–¥–∞—á</p>).
–ü–æ–ø—Ä–æ–±—É–π –∫–∞—Å—Ç–æ–º–Ω—ã–π —á–µ–∫–±–æ–∫—Å —á–µ—Ä–µ–∑ SCSS.
–ó–∞–ø–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Ñ-–ø–æ–¥—Ä–æ–±–Ω—ã–π —Ñ–∏–¥–±–µ–∫.
Debounce:
–ò—Å–ø—Ä–∞–≤—å —Ç–∏–ø–∏–∑–∞—Ü–∏—é –∏ return setTimeout –ø–æ –º–æ–µ–º—É –ø—Ä–∏–º–µ—Ä—É.
–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π —Å input-—Å–æ–±—ã—Ç–∏–µ–º (–ø—Ä–∏–º–µ—Ä –≤—ã—à–µ).
–ó–∞–ø–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥.
useFetch:
–ò—Å–ø–æ–ª—å–∑—É–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å useEffect.
–î–æ–±–∞–≤—å AbortController –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞.
–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ (–ø—Ä–∏–º–µ—Ä –≤—ã—à–µ).
–ü–æ–ª–∏—Ñ–∏–ª –¥–ª—è Array.map:
–ù–∞–ø–∏—à–∏ –ø–æ–ª–∏—Ñ–∏–ª –¥–ª—è Array.prototype.map:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
Array.prototype.myMap = function (callback, thisArg) {
  // –¢–≤–æ–π –∫–æ–¥
};
–î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π map: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–±—ç–∫ (element, index, array) => newElement –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤.
–ü—Ä–∏–º–µ—Ä:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
const arr = [1, 2, 3];
const doubled = arr.myMap((x) => x * 2); // [2, 4, 6]
–ú–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–î–µ–Ω—å 5-6):
–ù–∞—á–Ω–∏ —Ä–∞–±–æ—Ç—É –Ω–∞–¥ —Å–ø–∏—Å–∫–æ–º –ø–æ—Å—Ç–æ–≤ –∏–∑ API.
–ò—Å–ø–æ–ª—å–∑—É–π useFetch –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
–î–æ–±–∞–≤—å —Ñ–∏–ª—å—Ç—Ä –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É –∏ —Å—Ç–∏–ª–∏.
–¢–µ–æ—Ä–∏—è:
–û—Ç–≤–µ—Ç—å –Ω–∞ –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã:
–ß—Ç–æ —Ç–∞–∫–æ–µ Virtual DOM –∏ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ React?
–û–±—ä—è—Å–Ω–∏ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É debounce –∏ throttle.
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é flattenArray –¥–ª—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞:
ts

–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
flattenArray([1, [2, 3], [4, [5]]]) // [1, 2, 3, 4, 5]
–ü–ª–∞–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é:
–î–µ–Ω—å 1-2: –î–æ—Ä–∞–±–æ—Ç–∞–π TodoList, –∏—Å–ø—Ä–∞–≤—å debounce, –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π useFetch.
–î–µ–Ω—å 3-4: –ù–∞–ø–∏—à–∏ –ø–æ–ª–∏—Ñ–∏–ª Array.map, –Ω–∞—á–Ω–∏ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
–î–µ–Ω—å 5-6: –ó–∞–≤–µ—Ä—à–∏ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (—Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏).
–î–µ–Ω—å 7: –û—Ç–≤–µ—Ç—å –Ω–∞ 2-3 –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —Å–æ–±–µ—Å–æ–≤ (–≤—ã—à–µ).


---------------------------------------–û–¢–í–ï–¢-------------------------------------------------

